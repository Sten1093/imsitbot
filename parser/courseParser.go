package parser

import (
	"fmt"
	"github.com/xuri/excelize/v2"
	"log"
	"strings"
	"time"
)

type Group struct {
	ID        int    // Id группы
	TGName    string // Название группы в Telegram (со смайликами)
	FileName  string // Название группы в файле (без смайликов)
	CourseNum string // Номер курса
}

// GetGroups - возвращает список всех групп
func GetGroups() []Group {
	return []Group{
		{1, "💻24-ИВТ-01", "24-ИВТ-01", "🤓 1 курс"},
		{1, "👨‍💻24-ПИ-01", "24-ПИ-01", "🤓 1 курс"},
		{1, "👩‍💻24-ПИ-02", "24-ПИ-02", "🤓 1 курс"},
		{1, "🔬24-ПИнж-01", "24-ПИнж-01", "🤓 1 курс"},
		{1, "⚙️24-ПИнж-02", "24-ПИнж-02", "🤓 1 курс"},
		{1, "🛠️24-ДЗ-01", "24-ДЗ-01", "🤓 1 курс"},
		{1, "🧰24-ДЗ-02", "24-ДЗ-02", "🤓 1 курс"},
		{1, "🔩24-ДЗ-03", "24-ДЗ-03", "🤓 1 курс"},
		{1, "🏗24-ДЗ-04", "24-ДЗ-04", "🤓 1 курс"},
		{1, "🚜24-ЗР-01", "24-ЗР-01", "🤓 1 курс"},
		{1, "🧠24-Пс-01", "24-Пс-01", "🤓 1 курс"},
		{1, "📐24-РСО-01", "24-РСО-01", "🤓 1 курс"},
		{1, "📊24-ГМУ-01", "24-ГМУ-01", "🤓 1 курс"},
		{1, "📏24-М-01", "24-М-01", "🤓 1 курс"},
		{1, "💰24-ЭБ-01", "24-ЭБ-01", "🤓 1 курс"},
		{1, "⚖️24-Ю-01", "24-Ю-01", "🤓 1 курс"},

		{2, "💻23-ИВТ-01", "23-ИВТ-01", "😎 2 курс"},
		{2, "👨‍💻23-ПИ-01", "23-ПИ-01", "😎 2 курс"},
		{2, "🔧23-ДЗ-01", "23-ДЗ-01", "😎 2 курс"},
		{2, "⚙️23-ДЗ-02", "23-ДЗ-02", "😎 2 курс"},
		{2, "🏗️23-ЗР-01", "23-ЗР-01", "😎 2 курс"},
		{2, "🖥️23-ПО-01", "23-ПО-01", "😎 2 курс"},
		{2, "🚜23-РСО-01", "23-РСО-01", "😎 2 курс"},
		{2, "📊23-ГМУ-01", "23-ГМУ-01", "😎 2 курс"},
		{2, "📏23-М-01", "23-М-01", "😎 2 курс"},
		{2, "💰23-ЭБ-01", "23-ЭБ-01", "😎 2 курс"},

		{3, "💻22-ИВТ-01", "22-ИВТ-01", "🧐 3 курс"},
		{3, "👨‍💻22-ПИ-01", "22-ПИ-01", "🧐 3 курс"},
		{3, "🔧22-ДЗ-01", "22-ДЗ-01", "🧐 3 курс"},
		{3, "⚙️22-ДЗ-02", "22-ДЗ-02", "🧐 3 курс"},
		{3, "🚜22-РСО-01", "22-РСО-01", "🧐 3 курс"},
		{3, "📊22-ГМУ-01", "22-ГМУ-01", "🧐 3 курс"},
		{3, "📏22-М-01", "22-М-01", "🧐 3 курс"},
		{3, "💰22-ЭБ-01", "22-ЭБ-01", "🧐 3 курс"},
		{3, "🖥️22-ПО-01", "22-ПО-01", "🧐 3 курс"},
		{3, "🏗️22-ЗР-01", "22-ЗР-01", "🧐 3 курс"},

		{4, "💻21-ИВТ-01", "21-ИВТ-01", "🎓 4 курс"},
		{4, "👨‍💻21-ПИ-01", "21-ПИ-01", "🎓 4 курс"},
		{4, "🔧21-ДЗ-01", "21-ДЗ-01", "🎓 4 курс"},
		{4, "⚙️21-ДЗ-02", "21-ДЗ-02", "🎓 4 курс"},
		{4, "🏗21-ЗР-01", "21-ЗР-01", "🎓 4 курс"},
		{4, "🖥️21-ПО-01", "21-ПО-01", "🎓 4 курс"},
		{4, "🚜21-РСО-01", "21-РСО-01", "🎓 4 курс"},
		{4, "📊21-ГМУ-01", "21-ГМУ-01", "🎓 4 курс"},
		{4, "📏21-М-01", "21-М-01", "🎓 4 курс"},
		{4, "🤝21-УП-01", "21-УП-01", "🎓 4 курс"},
		{4, "💰21-ЭБ-01", "21-ЭБ-01", "🎓 4 курс"},
		{4, "🥸21-БИ-01", "21-БИ-01", "🎓 4 курс"},

		{5, "🖥️20-ПО-01", "20-ПО-01", "🫠 5 курс"},
		{5, "🖥️20-ПО-01", "20-ПО-01", "🫠 5 курс"},

		{7, "🏗24-СПО-ГрД-01", "24-СПО-ГрД-01", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-02", "24-СПО-ГрД-02", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-03", "24-СПО-ГрД-03", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-04", "24-СПО-ГрД-04", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-05", "24-СПО-ГрД-05", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-06", "24-СПО-ГрД-06", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-07", "24-СПО-ГрД-07", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-08", "24-СПО-ГрД-08", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-09", "24-СПО-ГрД-09", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-10", "24-СПО-ГрД-10", "🤓 1 курс"},
		{7, "🎓24-СПО-Дн-01", "24-СПО-Дн-01", "🤓 1 курс"},
		{7, "🖥24-СПО-Дн-02", "24-СПО-Дн-02", "🤓 1 курс"},
		{7, "🚜24-СПО-Дн-03", "24-СПО-Дн-03", "🤓 1 курс"},
		{7, "📊24-СПО-Дн-04", "24-СПО-Дн-04", "🤓 1 курс"},
		{7, "📏24-СПО-ТИК-01", "24-СПО-ТИК-01", "🤓 1 курс"},
		{7, "📏24-СПО-ТИК-02", "24-СПО-ТИК-02", "🤓 1 курс"},
		{7, "📏24-СПО-ТИК-03", "24-СПО-ТИК-03", "🤓 1 курс"},
		{7, "📏24-СПО-ТИК-04", "24-СПО-ТИК-04", "🤓 1 курс"},
		{7, "📏24-СПО-ТИФ-01", "24-СПО-ТИФ-01", "🤓 1 курс"},
		{7, "📏24-СПО-ТИФ-02", "24-СПО-ТИФ-02", "🤓 1 курс"},
		{7, "📜24-СПО-КП-01", "24-СПО-КП-01", "🤓 1 курс"},
		{7, "💰24-СПО-ПНК-01", "24-СПО-ПНК-01", "🤓 1 курс"},
		{7, "💰24-СПО-ПНК-02", "24-СПО-ПНК-02", "🤓 1 курс"},
		{7, "💻24-СПО-Р-01", "24-СПО-Р-01", "🤓 1 курс"},
		{7, "🚜24-СПО-Р-02", "24-СПО-Р-02", "🤓 1 курс"},
		{7, "📊24-СПО-Р-03", "24-СПО-Р-03", "🤓 1 курс"},
		{7, "📊24-СПО-Р-04", "24-СПО-Р-04", "🤓 1 курс"},
		{7, "🏗24-СПО-ТиГ-01", "24-СПО-ТиГ-01", "🤓 1 курс"},
		{7, "🏗24-СПО-ТиГ-02", "24-СПО-ТиГ-02", "🤓 1 курс"},
		{7, "🏗24-СПО-ТиГ-03", "24-СПО-ТиГ-03", "🤓 1 курс"},
		{7, "🏗24-СПО-ТиГ-04", "24-СПО-ТиГ-04", "🤓 1 курс"},
		{7, "🛠24-СПО-ЗУ-01", "24-СПО-ЗУ-01", "🤓 1 курс"},
		{7, "🛠24-СПО-ЗУ-02", "24-СПО-ЗУ-02", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-01", "24-СПО-ИСиП-01", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-02", "24-СПО-ИСиП-02", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-03", "24-СПО-ИСиП-03", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-04", "24-СПО-ИСиП-04", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-05", "24-СПО-ИСiП-05", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-06", "24-СПО-ИСiП-06", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-07", "24-СПО-ИСiП-07", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-08", "24-СПО-ИСiП-08", "🤓 1 курс"},
		{7, "💻24-СПО-ОИБАС-01", "24-СПО-ОИБАС-01", "🤓 1 курс"},
		{7, "💻24-СПО-ОИБАС-02", "24-СПО-ОИБАС-02", "🤓 1 курс"},
		{7, "💻24-СПО-ОИБАС-03", "24-СПО-ОИБАС-03", "🤓 1 курс"},
		{7, "👨‍💻24-СПО-СиСА-01", "24-СПО-СиСА-01", "🤓 1 курс"},
		{7, "👨‍💻24-СПО-СиСА-02", "24-СПО-СиСА-02", "🤓 1 курс"},
		{7, "👨‍💻24-СПО-СиСА-03", "24-СПО-СиСА-03", "🤓 1 курс"},
		{7, "💾24-СПО-БД-01", "24-СПО-БД-01", "🤓 1 курс"},
		{7, "🩺24-СПО-ОДЛ-01", "24-СПО-ОДЛ-01", "🤓 1 курс"},
		{7, "🩺24-СПО-ОДЛ-02", "24-СПО-ОДЛ-02", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-01", "24-СПО-ПД-01", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-02", "24-СПО-ПД-02", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-03", "24-СПО-ПД-03", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-04", "24-СПО-ПД-04", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-05", "24-СПО-ПД-05", "🤓 1 курс"},
		{7, "⚕️24-СПО-Ф-01", "24-СПО-Ф-01", "🤓 1 курс"},
		{7, "⚕️24-СПО-Ф-02", "24-СПО-Ф-02", "🤓 1 курс"},
		{7, "💰24-СПО-ЭБУ-01", "24-СПО-ЭБУ-01", "🤓 1 курс"},
		{7, "⚖️24-СПО-Ю-01", "24-СПО-Ю-01", "🤓 1 курс"},
		{7, "⚖️24-СПО-Ю-02", "24-СПО-Ю-02", "🤓 1 курс"},

		{8, "🎓24-СПО-Дн-05", "24-СПО-Дн-05", "😎 2 курс"},
		{8, "📏24-СПО-ТИК-05", "24-СПО-ТИК-05", "😎 2 курс"},
		{8, "🏗24-СПО-ТиГ-06", "24-СПО-ТиГ-06", "😎 2 курс"},
		{8, "🛠24-СПО-ЗУ-03", "24-СПО-ЗУ-03", "😎 2 курс"},
		{8, "📏24-СПО-ИСиП-09", "24-СПО-ИСиП-09", "😎 2 курс"},
		{8, "📏24-СПО-ИСиП-10", "24-СПО-ИСиП-10", "😎 2 курс"},
		{8, "💻24-СПО-ОИБАС-04", "24-СПО-ОИБАС-04", "😎 2 курс"},
		{8, "📜24-СПО-ПД-06", "24-СПО-ПД-06", "😎 2 курс"},
		{8, "⚕️24-СПО-Ф-03", "24-СПО-Ф-03", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-01", "23-СПО-ГрД-01", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-02", "23-СПО-ГрД-02", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-03", "23-СПО-ГрД-03", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-04", "23-СПО-ГрД-04", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-05", "23-СПО-ГрД-05", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-06", "23-СПО-ГрД-06", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-07", "23-СПО-ГрД-07", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-08", "23-СПО-ГрД-08", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-09", "23-СПО-ГрД-09", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-10", "23-СПО-ГрД-10", "😎 2 курс"},
		{8, "🎓23-СПО-Дн-01", "23-СПО-Дн-01", "😎 2 курс"},
		{8, "🖥23-СПО-Дн-02", "23-СПО-Дн-02", "😎 2 курс"},
		{8, "🚜23-СПО-Дн-03", "23-СПО-Дн-03", "😎 2 курс"},
		{8, "📊23-СПО-Дн-04", "23-СПО-Дн-04", "😎 2 курс"},
		{8, "📏23-СПО-ТИК-01", "23-СПО-ТИК-01", "😎 2 курс"},
		{8, "📏23-СПО-ТИК-02", "23-СПО-ТИК-02", "😎 2 курс"},
		{8, "📏23-СПО-ТИК-03", "23-СПО-ТИК-03", "😎 2 курс"},
		{8, "📏23-СПО-ТИФ-01", "23-СПО-ТИФ-01", "😎 2 курс"},
		{8, "📏23-СПО-ТИФ-02", "23-СПО-ТИФ-02", "😎 2 курс"},
		{8, "📏23-СПО-ТИФ-03", "23-СПО-ТИФ-03", "😎 2 курс"},
		{8, "💰23-СПО-ПНК-01", "23-СПО-ПНК-01", "😎 2 курс"},
		{8, "💰23-СПО-ПнК-02", "23-СПО-ПНК-02", "😎 2 курс"},
		{8, "💰23-СПО-ПНК-03", "23-СПО-ПНК-03", "😎 2 курс"},
		{8, "💻23-СПО-Р-01", "23-СПО-Р-01", "😎 2 курс"},
		{8, "🚜23-СПО-Р-02", "23-СПО-Р-02", "😎 2 курс"},
		{8, "📊23-СПО-Р-03", "23-СПО-Р-03", "😎 2 курс"},
		{8, "🏗23-СПО-ТиГ-01", "23-СПО-ТиГ-01", "😎 2 курс"},
		{8, "🏗23-СПО-ТиГ-02", "23-СПО-ТиГ-02", "😎 2 курс"},
		{8, "🛠23-СПО-ЗУ-01", "23-СПО-ЗУ-01", "😎 2 курс"},
		{8, "🛠23-СПО-ЗУ-02", "23-СПО-ЗУ-02", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-01", "23-СПО-ИСиП-01", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-02", "23-СПО-ИСиП-02", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-03", "23-СПО-ИСиП-03", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-04", "23-СПО-ИСиП-04", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-05", "23-СПО-ИСиП-05", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-06", "23-СПО-ИСиП-06", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-07", "23-СПО-ИСиП-07", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-08", "23-СПО-ИСиП-08", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-09", "23-СПО-ИСиП-09", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-10", "23-СПО-ИСиП-10", "😎 2 курс"},
		{8, "💻23-СПО-ОИБАС-01", "23-СПО-ОИБАС-01", "😎 2 курс"},
		{8, "💻23-СПО-ОИБАС-02", "23-СПО-ОИБАС-02", "😎 2 курс"},
		{8, "💻23-СПО-ОИБАС-03", "23-СПО-ОИБАС-03", "😎 2 курс"},
		{8, "👨‍💻23-СПО-СиСА-01", "23-СПО-СиСА-01", "😎 2 курс"},
		{8, "👨‍💻23-СПО-СиСА-02", "23-СПО-СиСА-02", "😎 2 курс"},
		{8, "👨‍💻23-СПО-СиСА-03", "23-СПО-СиСА-03", "😎 2 курс"},
		{8, "💾23-СПО-БД-01", "23-СПО-БД-01", "😎 2 курс"},

		{9, "🎓23-СПО-Дн-05", "23-СПО-Дн-05", "🧐 3 курс"},
		{9, "📏23-СПО-ТИФ-04", "23-СПО-ТИФ-04", "🧐 3 курс"},
		{9, "💻23-СПО-Р-04", "23-СПО-Р-04", "🧐 3 курс"},
		{9, "🖧23-СПО-СиСА-04", "23-СПО-СиСА-04", "🧐 3 курс"},
		{9, "💾23-СПО-БД-02", "23-СПО-БД-02", "🧐 3 курс"},
		{9, "📜23-СПО-ПД-06", "23-СПО-ПД-06", "🧐 3 курс"},
		{9, "📜23-СПО-ПД-07", "23-СПО-ПД-07", "🧐 3 курс"},
		{9, "⚕️23-СПО-Ф-02", "23-СПО-Ф-02", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-01", "22-СПО-ГрД-01", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-02", "22-СПО-ГрД-02", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-03", "22-СПО-ГрД-03", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-04", "22-СПО-ГрД-04", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-05", "22-СПО-ГрД-05", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-06", "22-СПО-ГрД-06", "🧐 3 курс"},
		{9, "🎓22-СПО-Дн-01", "22-СПО-Дн-01", "🧐 3 курс"},
		{9, "🖥22-СПО-Дн-02", "22-СПО-Дн-02", "🧐 3 курс"},
		{9, "🚜22-СПО-Дн-03", "22-СПО-Дн-03", "🧐 3 курс"},
		{9, "📊22-СПО-Дн-04", "22-СПО-Дн-04", "🧐 3 курс"},
		{9, "📏22-СПО-ТИФ-01", "22-СПО-ТИФ-01", "🧐 3 курс"},
		{9, "📏22-СПО-ТИФ-02", "22-СПО-ТИФ-02", "🧐 3 курс"},
		{9, "📏22-СПО-ТИФ-03", "22-СПО-ТИФ-03", "🧐 3 курс"},
		{9, "📏22-СПО-ТИФ-04", "22-СПО-ТИФ-04", "🧐 3 курс"},
		{9, "📏22-СПО-ТПИ-01", "22-СПО-ТПИ-01", "🧐 3 курс"},
		{9, "🤝22-СПО-ГД-01", "22-СПО-ГД-01", "🧐 3 курс"},
		{9, "💰22-СПО-ПНК-01", "22-СПО-ПНК-01", "🧐 3 курс"},
		{9, "💰22-СПО-ПНК-02", "22-СПО-ПНК-02", "🧐 3 курс"},
		{9, "💰22-СПО-ПНК-03", "22-СПО-ПНК-03", "🧐 3 курс"},
		{9, "💻22-СПО-Р-01", "22-СПО-Р-01", "🧐 3 курс"},
		{9, "🚜22-СПО-Р-02", "22-СПО-Р-02", "🧐 3 курс"},
		{9, "🔧22-СПО-Т-01", "22-СПО-Т-01", "🧐 3 курс"},
		{9, "🛠22-СПО-ЗИО-01", "22-СПО-ЗИО-01", "🧐 3 курс"},
		{9, "🛠22-СПО-ЗИО-02", "22-СПО-ЗИО-02", "🧐 3 курс"},
		{9, "🛠22-СПО-ЗИО-03", "22-СПО-ЗИО-03", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-01", "22-СПО-ИСиП-01", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-02", "22-СПО-ИСиП-02", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-03", "22-СПО-ИСиП-03", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-04", "22-СПО-ИСиП-04", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-05", "22-СПО-ИСиП-05", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-06", "22-СПО-ИСиП-06", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-07", "22-СПО-ИСиП-07", "🧐 3 курс"},
		{9, "💰22-СПО-ОТЗИ-01", "22-СПО-ОТЗИ-01", "🧐 3 курс"},
		{9, "💰22-СПО-ОТЗИ-02", "22-СПО-ОТЗИ-02", "🧐 3 курс"},
		{9, "💰22-СПО-ОТЗИ-03", "22-СПО-ОТЗИ-03", "🧐 3 курс"},
		{9, "👨‍💻22-СПО-СиСА-01", "22-СПО-СиСА-01", "🧐 3 курс"},
		{9, "👨‍💻22-СПО-СиСА-02", "22-СПО-СиСА-02", "🧐 3 курс"},
		{9, "👨‍💻22-СПО-СиСА-03", "22-СПО-СиСА-03", "🧐 3 курс"},
		{9, "👨‍💻22-СПО-СиСА-04", "22-СПО-СиСА-04", "🧐 3 курс"},
		{9, "💾22-СПО-БД-01", "22-СПО-БД-01", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-01", "22-СПО-ПД-01", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-02", "22-СПО-ПД-02", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-03", "22-СПО-ПД-03", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-04", "22-СПО-ПД-04", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-05", "22-СПО-ПД-05", "🧐 3 курс"},
		{9, "⚕️22-СПО-Ф-01", "22-СПО-Ф-01", "🧐 3 курс"},
		{9, "🏢22-СПО-ЭБУ-01", "22-СПО-ЭБУ-01", "🧐 3 курс"},

		{10, "🎓22-СПО-Дн-05", "22-СПО-Дн-05", "🎓 4 курс"},
		{10, "💻22-СПО-Р-03", "22-СПО-Р-03", "🎓 4 курс"},
		{10, "🏗21-СПО-ГрД-01", "21-СПО-ГрД-01", "🎓 4 курс"},
		{10, "🏗21-СПО-ГрД-03", "21-СПО-ГрД-03", "🎓 4 курс"},
		{10, "🏗21-СПО-ГрД-04", "21-СПО-ГрД-04", "🎓 4 курс"},
		{10, "🏗21-СПО-Дн-01", "21-СПО-Дн-01", "🎓 4 курс"},
		{10, "🖥️21-СПО-Дн-02", "21-СПО-Дн-02", "🎓 4 курс"},
		{10, "🚜21-СПО-Дн-03", "21-СПО-Дн-03", "🎓 4 курс"},
		{10, "📊21-СПО-Дн-04", "21-СПО-Дн-04", "🎓 4 курс"},
		{10, "📏21-СПО-ТПИ-01", "21-СПО-ТПИ-01", "🎓 4 курс"},
		{10, "🤝21-СПО-ГД-01", "21-СПО-ГД-01", "🎓 4 курс"},
		{10, "💰21-СПО-ПНК-01,02 22-СПО-ПНК-04", "21-СПО-ПНК-01,02 22-СПО-ПНК-04", "🎓 4 курс"},
		{10, "💻21-СПО-Р-01", "21-СПО-Р-01", "🎓 4 курс"},
		{10, "🚜21-СПО-Р-02", "21-СПО-Р-02", "🎓 4 курс"},
		{10, "📊21-СПО-Р-03", "21-СПО-Р-03", "🎓 4 курс"},
		{10, "📏21-СПО-ИСиП-01,02,03 22-СПО-ИСиП-08,09,10", "21-СПО-ИСиП-01,02,03 22-СПО-ИСиП-08,09,10", "🎓 4 курс"},
		{10, "🤝21-СПО-ИСиП-04,05,06", "21-СПО-ИСиП-04,05,06", "🎓 4 курс"},
		{10, "💰21-СПО-ОТЗИ-01,02 22-СПО-ОТЗИ-04", "21-СПО-ОТЗИ-01,02 22-СПО-ОТЗИ-04", "🎓 4 курс"},
		{10, "🥸21-СПО-СиСА-01,02", "21-СПО-СиСА-01,02", "🎓 4 курс"},
	}
}

// FindGroup - находит группу по Telegram-имени
func FindGroup(tgName string) *Group {
	for _, group := range GetGroups() {
		if group.TGName == tgName {
			return &group
		}
	}
	return nil
}

func GenerateResponseFromTable(fieldPosStart int, fieldPosEnd int, groupName int, rows [][]string) (resault []string) {

	for i := fieldPosEnd; i <= fieldPosStart && i < len(rows); i++ {
		row := rows[i]
		if len(row) > groupName && row[groupName] != "" {
			entry := fmt.Sprintf("%s: %s", row[1], row[groupName])
			if strings.TrimSpace(entry) != "" {
				resault = append(resault, entry)
			}
		}
	}
	if resault == nil {
		return append(resault, "Выходной")
	} else {
		return
	}
}

func Tab(TGName, format, education string) string {
	var (
		dayRus, fileName, result              string
		groupName, fieldPosEnd, fieldPosStart int
	)

	group := FindGroup(TGName)
	if group == nil {
		return fmt.Sprintf("Группа %s не найдена", TGName)
	}

	_, _, week, _ := NowTime()
	switch education {
	case "Высшее":
		switch group.CourseNum { // проверка курса перед окрыием файла
		case "🤓 1 курс":
			fileName = "resources/1_course.xlsx"
		case "😎 2 курс":
			fileName = "resources/2_course.xlsx"
		case "🧐 3 курс":
			fileName = "resources/3_course.xlsx"
		case "🎓 4 курс":
			fileName = "resources/4_course.xlsx"
		case "🫠 5 курс":
			fileName = "resources/5_course.xlsx"

		}
	case "Среднее":
		switch group.CourseNum { // проверка курса перед окрыием файла
		case "🤓 1 курс":
			fileName = "resources/СПО_1_course.xlsx"
		case "😎 2 курс":
			fileName = "resources/СПО_2_course.xlsx"
		case "🧐 3 курс":
			fileName = "resources/СПО_3_course.xlsx"
		case "🎓 4 курс":
			fileName = "resources/СПО_4_course.xlsx"
		}
	}

	f, err := excelize.OpenFile(fileName) // открыттие файла
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()

	rows, err := f.GetRows(week) // перенос файла в переменную
	if err != nil {
		log.Fatal(err)
	}

	// Поиск столбца группы
	found := false
	for j, cell := range rows[0] { // Поиск столбца группы
		if cell == group.FileName {
			groupName = j
			found = true
		}
	}

	if !found { // Группа не найдена
		return fmt.Sprintf("Группа %s не найдена", group)
	}

	if format == "📅 Неделя" {
		day := time.Monday
		switch day {
		case time.Monday:
			dayRus = "\nПонедельник\n"
			fieldPosEnd = 1
			fieldPosStart = 14
			result = dayRus + strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n") + "\n----------\n"
			fallthrough
		case time.Tuesday:
			dayRus = "\nВторник\n"
			fieldPosEnd = 15
			fieldPosStart = 28
			result = result + dayRus + strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n") + "\n----------\n"
			fallthrough
		case time.Wednesday:
			dayRus = "\nСреда\n"
			fieldPosEnd = 29
			fieldPosStart = 42
			result = result + dayRus + strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n") + "\n----------\n"
			fallthrough
		case time.Thursday:
			dayRus = "\nЧетверг\n"
			fieldPosEnd = 43
			fieldPosStart = 56
			result = result + dayRus + strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n") + "\n----------\n"
			fallthrough
		case time.Friday:
			dayRus = "\nПятница\n"
			fieldPosEnd = 57
			fieldPosStart = 70
			result = result + dayRus + strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n") + "\n----------\n"
			fallthrough
		case time.Saturday:
			dayRus = "\nСуббота\n"
			fieldPosEnd = 71
			fieldPosStart = 84
			result = result + dayRus + strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n") + "\n----------\n"
			fallthrough
		case time.Sunday:
			dayRus = "Воскресенье"
			//fieldPosEnd = 85
			//fieldPosStart = 98
			return result
		}
	} else if format == "🌞 День 🙋‍♂️" {
		_, day, _, _ := NowTime()
		switch day {
		case time.Monday:
			fieldPosEnd = 1
			fieldPosStart = 14
			return strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n")
		case time.Tuesday:
			fieldPosEnd = 15
			fieldPosStart = 28
			return strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n")
		case time.Wednesday:
			fieldPosEnd = 29
			fieldPosStart = 42
			return strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n")
		case time.Thursday:
			fieldPosEnd = 43
			fieldPosStart = 56
			return strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n")
		case time.Friday:
			fieldPosEnd = 57
			fieldPosStart = 70
			return strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n")
		case time.Saturday:
			fieldPosEnd = 71
			fieldPosStart = 84
			return strings.Join(GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName, rows), "\n")
		case time.Sunday:
			//dayRus = "Воскресенье"
			//fieldPosEnd = 85
			//fieldPosStart = 98
			return "У тебя выходной ;)" // Возвращаем пустую строку для воскресенья
		}
	}
	return "Не нашел нужных данных :( "
}
