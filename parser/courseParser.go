package parser

import (
	"fmt"
	"github.com/xuri/excelize/v2"
	"strings"
	"sync"
	"time"
)

type Group struct {
	ID        int
	TGName    string
	FileName  string
	CourseNum string
}

// Константы
const (
	HigherEd    = "🎓Высшее"
	SecondaryEd = "📜Среднее"
	WeekFormat  = "📅 Неделя"
	DayFormat   = "🌞 День 🙋‍♂️"
)

// Глобальный кэш групп
var (
	groups     []Group
	groupsMap  map[string]*Group
	groupsInit sync.Once
)

func initGroups() {
	groups = []Group{
		{1, "💻24-ИВТ-01", "24-ИВТ-01", "🤓 1 курс"},
		{1, "👨‍💻24-ПИ-01", "24-ПИ-01", "🤓 1 курс"},
		{1, "👩‍💻24-ПИ-02", "24-ПИ-02", "🤓 1 курс"},
		{1, "🔬24-ПИнж-01", "24-ПИнж-01", "🤓 1 курс"},
		{1, "⚙️24-ПИнж-02", "24-ПИнж-02", "🤓 1 курс"},
		{1, "🛠️24-ДЗ-01", "24-ДЗ-01", "🤓 1 курс"},
		{1, "🧰24-ДЗ-02", "24-ДЗ-02", "🤓 1 курс"},
		{1, "🔩24-ДЗ-03", "24-ДЗ-03", "🤓 1 курс"},
		{1, "🏗24-ДЗ-04", "24-ДЗ-04", "🤓 1 курс"},
		{1, "🚜24-ЗР-01", "24-ЗР-01", "🤓 1 курс"},
		{1, "🧠24-Пс-01", "24-Пс-01", "🤓 1 курс"},
		{1, "📐24-РСО-01", "24-РСО-01", "🤓 1 курс"},
		{1, "📊24-ГМУ-01", "24-ГМУ-01", "🤓 1 курс"},
		{1, "📏24-М-01", "24-М-01", "🤓 1 курс"},
		{1, "💰24-ЭБ-01", "24-ЭБ-01", "🤓 1 курс"},
		{1, "⚖️24-Ю-01", "24-Ю-01", "🤓 1 курс"},
		{1, "🗿24-ПО-02", "24-ПО-02 (История и право)", "🤓 1 курс"},

		{2, "💻23-ИВТ-01", "23-ИВТ-01", "😎 2 курс"},
		{2, "👨‍💻23-ПИ-01", "23-ПИ-01", "😎 2 курс"},
		{2, "🔧23-ДЗ-01", "23-ДЗ-01", "😎 2 курс"},
		{2, "⚙️23-ДЗ-02", "23-ДЗ-02", "😎 2 курс"},
		{2, "🏗️23-ЗР-01", "23-ЗР-01", "😎 2 курс"},
		{2, "🖥️23-ПО-01", "23-ПО-01", "😎 2 курс"},
		{2, "🚜23-РСО-01", "23-РСО-01", "😎 2 курс"},
		{2, "📊23-ГМУ-01", "23-ГМУ-01", "😎 2 курс"},
		{2, "📏23-М-01", "23-М-01", "😎 2 курс"},
		{2, "💰23-ЭБ-01", "23-ЭБ-01", "😎 2 курс"},

		{3, "💻22-ИВТ-01", "22-ИВТ-01", "🧐 3 курс"},
		{3, "👨‍💻22-ПИ-01", "22-ПИ-01", "🧐 3 курс"},
		{3, "🔧22-ДЗ-01", "22-ДЗ-01", "🧐 3 курс"},
		{3, "⚙️22-ДЗ-02", "22-ДЗ-02", "🧐 3 курс"},
		{3, "🚜22-РСО-01", "22-РСО-01", "🧐 3 курс"},
		{3, "📊22-ГМУ-01", "22-ГМУ-01", "🧐 3 курс"},
		{3, "📏22-М-01", "22-М-01", "🧐 3 курс"},
		{3, "💰22-ЭБ-01", "22-ЭБ-01", "🧐 3 курс"},
		{3, "🖥️22-ПО-01", "22-ПО-01", "🧐 3 курс"},
		{3, "🏗️22-ЗР-01", "22-ЗР-01", "🧐 3 курс"},

		{4, "💻21-ИВТ-01", "21-ИВТ-01", "🎓 4 курс"},
		{4, "👨‍💻21-ПИ-01", "21-ПИ-01", "🎓 4 курс"},
		{4, "🔧21-ДЗ-01", "21-ДЗ-01", "🎓 4 курс"},
		{4, "⚙️21-ДЗ-02", "21-ДЗ-02", "🎓 4 курс"},
		{4, "🏗21-ЗР-01", "21-ЗР-01", "🎓 4 курс"},
		{4, "🖥️21-ПО-01", "21-ПО-01", "🎓 4 курс"},
		{4, "🚜21-РСО-01", "21-РСО-01", "🎓 4 курс"},
		{4, "📊21-ГМУ-01", "21-ГМУ-01", "🎓 4 курс"},
		{4, "📏21-М-01", "21-М-01", "🎓 4 курс"},
		{4, "🤝21-УП-01", "21-УП-01", "🎓 4 курс"},
		{4, "💰21-ЭБ-01", "21-ЭБ-01", "🎓 4 курс"},
		{4, "🥸21-БИ-01", "21-БИ-01", "🎓 4 курс"},

		{5, "🖥️20-ПО-01", "20-ПО-01", "🫠 5 курс"},
		{5, "🖥️20-ПО-02", "20-ПО-02", "🫠 5 курс"},

		{7, "🏗24-СПО-ГрД-01", "24-СПО-ГрД-01", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-02", "24-СПО-ГрД-02", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-03", "24-СПО-ГрД-03", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-04", "24-СПО-ГрД-04", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-05", "24-СПО-ГрД-05", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-06", "24-СПО-ГрД-06", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-07", "24-СПО-ГрД-07", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-08", "24-СПО-ГрД-08", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-09", "24-СПО-ГрД-09", "🤓 1 курс"},
		{7, "🏗24-СПО-ГрД-10", "24-СПО-ГрД-10", "🤓 1 курс"},
		{7, "🎓24-СПО-Дн-01", "24-СПО-Дн-01", "🤓 1 курс"},
		{7, "🖥24-СПО-Дн-02", "24-СПО-Дн-02", "🤓 1 курс"},
		{7, "🚜24-СПО-Дн-03", "24-СПО-Дн-03", "🤓 1 курс"},
		{7, "📊24-СПО-Дн-04", "24-СПО-Дн-04", "🤓 1 курс"},
		{7, "📏24-СПО-ТИК-01", "24-СПО-ТИК-01", "🤓 1 курс"},
		{7, "📏24-СПО-ТИК-02", "24-СПО-ТИК-02", "🤓 1 курс"},
		{7, "📏24-СПО-ТИК-03", "24-СПО-ТИК-03", "🤓 1 курс"},
		{7, "📏24-СПО-ТИК-04", "24-СПО-ТИК-04", "🤓 1 курс"},
		{7, "📏24-СПО-ТИФ-01", "24-СПО-ТИФ-01", "🤓 1 курс"},
		{7, "📏24-СПО-ТИФ-02", "24-СПО-ТИФ-02", "🤓 1 курс"},
		{7, "📜24-СПО-КП-01", "24-СПО-КП-01", "🤓 1 курс"},
		{7, "💰24-СПО-ПНК-01", "24-СПО-ПНК-01", "🤓 1 курс"},
		{7, "💰24-СПО-ПНК-02", "24-СПО-ПНК-02", "🤓 1 курс"},
		{7, "💻24-СПО-Р-01", "24-СПО-Р-01", "🤓 1 курс"},
		{7, "🚜24-СПО-Р-02", "24-СПО-Р-02", "🤓 1 курс"},
		{7, "📊24-СПО-Р-03", "24-СПО-Р-03", "🤓 1 курс"},
		{7, "📊24-СПО-Р-04", "24-СПО-Р-04", "🤓 1 курс"},
		{7, "🏗24-СПО-ТиГ-01", "24-СПО-ТиГ-01", "🤓 1 курс"},
		{7, "🏗24-СПО-ТиГ-02", "24-СПО-ТиГ-02", "🤓 1 курс"},
		{7, "🏗24-СПО-ТиГ-03", "24-СПО-ТиГ-03", "🤓 1 курс"},
		{7, "🏗24-СПО-ТиГ-04", "24-СПО-ТиГ-04", "🤓 1 курс"},
		{7, "🛠24-СПО-ЗУ-01", "24-СПО-ЗУ-01", "🤓 1 курс"},
		{7, "🛠24-СПО-ЗУ-02", "24-СПО-ЗУ-02", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-01", "24-СПО-ИСиП-01", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-02", "24-СПО-ИСиП-02", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-03", "24-СПО-ИСиП-03", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-04", "24-СПО-ИСиП-04", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-05", "24-СПО-ИСiП-05", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-06", "24-СПО-ИСiП-06", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-07", "24-СПО-ИСiП-07", "🤓 1 курс"},
		{7, "📏24-СПО-ИСиП-08", "24-СПО-ИСiП-08", "🤓 1 курс"},
		{7, "💻24-СПО-ОИБАС-01", "24-СПО-ОИБАС-01", "🤓 1 курс"},
		{7, "💻24-СПО-ОИБАС-02", "24-СПО-ОИБАС-02", "🤓 1 курс"},
		{7, "💻24-СПО-ОИБАС-03", "24-СПО-ОИБАС-03", "🤓 1 курс"},
		{7, "👨‍💻24-СПО-СиСА-01", "24-СПО-СиСА-01", "🤓 1 курс"},
		{7, "👨‍💻24-СПО-СиСА-02", "24-СПО-СиСА-02", "🤓 1 курс"},
		{7, "👨‍💻24-СПО-СиСА-03", "24-СПО-СиСА-03", "🤓 1 курс"},
		{7, "💾24-СПО-БД-01", "24-СПО-БД-01", "🤓 1 курс"},
		{7, "🩺24-СПО-ОДЛ-01", "24-СПО-ОДЛ-01", "🤓 1 курс"},
		{7, "🩺24-СПО-ОДЛ-02", "24-СПО-ОДЛ-02", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-01", "24-СПО-ПД-01", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-02", "24-СПО-ПД-02", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-03", "24-СПО-ПД-03", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-04", "24-СПО-ПД-04", "🤓 1 курс"},
		{7, "📜24-СПО-ПД-05", "24-СПО-ПД-05", "🤓 1 курс"},
		{7, "⚕️24-СПО-Ф-01", "24-СПО-Ф-01", "🤓 1 курс"},
		{7, "⚕️24-СПО-Ф-02", "24-СПО-Ф-02", "🤓 1 курс"},
		{7, "💰24-СПО-ЭБУ-01", "24-СПО-ЭБУ-01", "🤓 1 курс"},
		{7, "⚖️24-СПО-Ю-01", "24-СПО-Ю-01", "🤓 1 курс"},
		{7, "⚖️24-СПО-Ю-02", "24-СПО-Ю-02", "🤓 1 курс"},

		{8, "🎓24-СПО-Дн-05", "24-СПО-Дн-05", "😎 2 курс"},
		{8, "📏24-СПО-ТИК-05", "24-СПО-ТИК-05", "😎 2 курс"},
		{8, "🏗24-СПО-ТиГ-06", "24-СПО-ТиГ-06", "😎 2 курс"},
		{8, "🛠24-СПО-ЗУ-03", "24-СПО-ЗУ-03", "😎 2 курс"},
		{8, "📏24-СПО-ИСиП-09", "24-СПО-ИСиП-09", "😎 2 курс"},
		{8, "📏24-СПО-ИСиП-10", "24-СПО-ИСиП-10", "😎 2 курс"},
		{8, "💻24-СПО-ОИБАС-04", "24-СПО-ОИБАС-04", "😎 2 курс"},
		{8, "📜24-СПО-ПД-06", "24-СПО-ПД-06", "😎 2 курс"},
		{8, "⚕️24-СПО-Ф-03", "24-СПО-Ф-03", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-01", "23-СПО-ГрД-01", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-02", "23-СПО-ГрД-02", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-03", "23-СПО-ГрД-03", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-04", "23-СПО-ГрД-04", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-05", "23-СПО-ГрД-05", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-06", "23-СПО-ГрД-06", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-07", "23-СПО-ГрД-07", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-08", "23-СПО-ГрД-08", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-09", "23-СПО-ГрД-09", "😎 2 курс"},
		{8, "🏗23-СПО-ГрД-10", "23-СПО-ГрД-10", "😎 2 курс"},
		{8, "🎓23-СПО-Дн-01", "23-СПО-Дн-01", "😎 2 курс"},
		{8, "🖥23-СПО-Дн-02", "23-СПО-Дн-02", "😎 2 курс"},
		{8, "🚜23-СПО-Дн-03", "23-СПО-Дн-03", "😎 2 курс"},
		{8, "📊23-СПО-Дн-04", "23-СПО-Дн-04", "😎 2 курс"},
		{8, "📏23-СПО-ТИК-01", "23-СПО-ТИК-01", "😎 2 курс"},
		{8, "📏23-СПО-ТИК-02", "23-СПО-ТИК-02", "😎 2 курс"},
		{8, "📏23-СПО-ТИК-03", "23-СПО-ТИК-03", "😎 2 курс"},
		{8, "📏23-СПО-ТИФ-01", "23-СПО-ТИФ-01", "😎 2 курс"},
		{8, "📏23-СПО-ТИФ-02", "23-СПО-ТИФ-02", "😎 2 курс"},
		{8, "📏23-СПО-ТИФ-03", "23-СПО-ТИФ-03", "😎 2 курс"},
		{8, "💰23-СПО-ПНК-01", "23-СПО-ПНК-01", "😎 2 курс"},
		{8, "💰23-СПО-ПнК-02", "23-СПО-ПНК-02", "😎 2 курс"},
		{8, "💰23-СПО-ПНК-03", "23-СПО-ПНК-03", "😎 2 курс"},
		{8, "💻23-СПО-Р-01", "23-СПО-Р-01", "😎 2 курс"},
		{8, "🚜23-СПО-Р-02", "23-СПО-Р-02", "😎 2 курс"},
		{8, "📊23-СПО-Р-03", "23-СПО-Р-03", "😎 2 курс"},
		{8, "🏗23-СПО-ТиГ-01", "23-СПО-ТиГ-01", "😎 2 курс"},
		{8, "🏗23-СПО-ТиГ-02", "23-СПО-ТиГ-02", "😎 2 курс"},
		{8, "🛠23-СПО-ЗУ-01", "23-СПО-ЗУ-01", "😎 2 курс"},
		{8, "🛠23-СПО-ЗУ-02", "23-СПО-ЗУ-02", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-01", "23-СПО-ИСиП-01", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-02", "23-СПО-ИСиП-02", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-03", "23-СПО-ИСиП-03", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-04", "23-СПО-ИСиП-04", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-05", "23-СПО-ИСиП-05", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-06", "23-СПО-ИСиП-06", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-07", "23-СПО-ИСиП-07", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-08", "23-СПО-ИСиП-08", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-09", "23-СПО-ИСиП-09", "😎 2 курс"},
		{8, "📏23-СПО-ИСиП-10", "23-СПО-ИСиП-10", "😎 2 курс"},
		{8, "💻23-СПО-ОИБАС-01", "23-СПО-ОИБАС-01", "😎 2 курс"},
		{8, "💻23-СПО-ОИБАС-02", "23-СПО-ОИБАС-02", "😎 2 курс"},
		{8, "💻23-СПО-ОИБАС-03", "23-СПО-ОИБАС-03", "😎 2 курс"},
		{8, "👨‍💻23-СПО-СиСА-01", "23-СПО-СиСА-01", "😎 2 курс"},
		{8, "👨‍💻23-СПО-СиСА-02", "23-СПО-СиСА-02", "😎 2 курс"},
		{8, "👨‍💻23-СПО-СиСА-03", "23-СПО-СиСА-03", "😎 2 курс"},
		{8, "💾23-СПО-БД-01", "23-СПО-БД-01", "😎 2 курс"},

		{9, "🎓23-СПО-Дн-05", "23-СПО-Дн-05", "🧐 3 курс"},
		{9, "📏23-СПО-ТИФ-04", "23-СПО-ТИФ-04", "🧐 3 курс"},
		{9, "💻23-СПО-Р-04", "23-СПО-Р-04", "🧐 3 курс"},
		{9, "🖧23-СПО-СиСА-04", "23-СПО-СиСА-04", "🧐 3 курс"},
		{9, "💾23-СПО-БД-02", "23-СПО-БД-02", "🧐 3 курс"},
		{9, "📜23-СПО-ПД-06", "23-СПО-ПД-06", "🧐 3 курс"},
		{9, "📜23-СПО-ПД-07", "23-СПО-ПД-07", "🧐 3 курс"},
		{9, "⚕️23-СПО-Ф-02", "23-СПО-Ф-02", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-01", "22-СПО-ГрД-01", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-02", "22-СПО-ГрД-02", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-03", "22-СПО-ГрД-03", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-04", "22-СПО-ГрД-04", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-05", "22-СПО-ГрД-05", "🧐 3 курс"},
		{9, "🏗22-СПО-ГрД-06", "22-СПО-ГрД-06", "🧐 3 курс"},
		{9, "🎓22-СПО-Дн-01", "22-СПО-Дн-01", "🧐 3 курс"},
		{9, "🖥22-СПО-Дн-02", "22-СПО-Дн-02", "🧐 3 курс"},
		{9, "🚜22-СПО-Дн-03", "22-СПО-Дн-03", "🧐 3 курс"},
		{9, "📊22-СПО-Дн-04", "22-СПО-Дн-04", "🧐 3 курс"},
		{9, "📏22-СПО-ТИФ-01", "22-СПО-ТИФ-01", "🧐 3 курс"},
		{9, "📏22-СПО-ТИФ-02", "22-СПО-ТИФ-02", "🧐 3 курс"},
		{9, "📏22-СПО-ТИФ-03", "22-СПО-ТИФ-03", "🧐 3 курс"},
		{9, "📏22-СПО-ТИФ-04", "22-СПО-ТИФ-04", "🧐 3 курс"},
		{9, "📏22-СПО-ТПИ-01", "22-СПО-ТПИ-01", "🧐 3 курс"},
		{9, "🤝22-СПО-ГД-01", "22-СПО-ГД-01", "🧐 3 курс"},
		{9, "💰22-СПО-ПНК-01", "22-СПО-ПНК-01", "🧐 3 курс"},
		{9, "💰22-СПО-ПНК-02", "22-СПО-ПНК-02", "🧐 3 курс"},
		{9, "💰22-СПО-ПНК-03", "22-СПО-ПНК-03", "🧐 3 курс"},
		{9, "💻22-СПО-Р-01", "22-СПО-Р-01", "🧐 3 курс"},
		{9, "🚜22-СПО-Р-02", "22-СПО-Р-02", "🧐 3 курс"},
		{9, "🔧22-СПО-Т-01", "22-СПО-Т-01", "🧐 3 курс"},
		{9, "🛠22-СПО-ЗИО-01", "22-СПО-ЗИО-01", "🧐 3 курс"},
		{9, "🛠22-СПО-ЗИО-02", "22-СПО-ЗИО-02", "🧐 3 курс"},
		{9, "🛠22-СПО-ЗИО-03", "22-СПО-ЗИО-03", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-01", "22-СПО-ИСиП-01", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-02", "22-СПО-ИСиП-02", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-03", "22-СПО-ИСиП-03", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-04", "22-СПО-ИСиП-04", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-05", "22-СПО-ИСиП-05", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-06", "22-СПО-ИСиП-06", "🧐 3 курс"},
		{9, "📏22-СПО-ИСиП-07", "22-СПО-ИСиП-07", "🧐 3 курс"},
		{9, "💰22-СПО-ОТЗИ-01", "22-СПО-ОТЗИ-01", "🧐 3 курс"},
		{9, "💰22-СПО-ОТЗИ-02", "22-СПО-ОТЗИ-02", "🧐 3 курс"},
		{9, "💰22-СПО-ОТЗИ-03", "22-СПО-ОТЗИ-03", "🧐 3 курс"},
		{9, "👨‍💻22-СПО-СиСА-01", "22-СПО-СиСА-01", "🧐 3 курс"},
		{9, "👨‍💻22-СПО-СиСА-02", "22-СПО-СиСА-02", "🧐 3 курс"},
		{9, "👨‍💻22-СПО-СиСА-03", "22-СПО-СиСА-03", "🧐 3 курс"},
		{9, "👨‍💻22-СПО-СиСА-04", "22-СПО-СиСА-04", "🧐 3 курс"},
		{9, "💾22-СПО-БД-01", "22-СПО-БД-01", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-01", "22-СПО-ПД-01", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-02", "22-СПО-ПД-02", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-03", "22-СПО-ПД-03", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-04", "22-СПО-ПД-04", "🧐 3 курс"},
		{9, "📜22-СПО-ПД-05", "22-СПО-ПД-05", "🧐 3 курс"},
		{9, "⚕️22-СПО-Ф-01", "22-СПО-Ф-01", "🧐 3 курс"},
		{9, "🏢22-СПО-ЭБУ-01", "22-СПО-ЭБУ-01", "🧐 3 курс"},

		{10, "🎓22-СПО-Дн-05", "22-СПО-Дн-05", "🎓 4 курс"},
		{10, "💻22-СПО-Р-03", "22-СПО-Р-03", "🎓 4 курс"},
		{10, "🏗21-СПО-ГрД-01", "21-СПО-ГрД-01", "🎓 4 курс"},
		{10, "🏗21-СПО-ГрД-03", "21-СПО-ГрД-03", "🎓 4 курс"},
		{10, "🏗21-СПО-ГрД-04", "21-СПО-ГрД-04", "🎓 4 курс"},
		{10, "🏗21-СПО-Дн-01", "21-СПО-Дн-01", "🎓 4 курс"},
		{10, "🖥️21-СПО-Дн-02", "21-СПО-Дн-02", "🎓 4 курс"},
		{10, "🚜21-СПО-Дн-03", "21-СПО-Дн-03", "🎓 4 курс"},
		{10, "📊21-СПО-Дн-04", "21-СПО-Дн-04", "🎓 4 курс"},
		{10, "📏21-СПО-ТПИ-01", "21-СПО-ТПИ-01", "🎓 4 курс"},
		{10, "🤝21-СПО-ГД-01", "21-СПО-ГД-01", "🎓 4 курс"},
		{10, "💰21-СПО-ПНК-01,02 22-СПО-ПНК-04", "21-СПО-ПНК-01,02 22-СПО-ПНК-04", "🎓 4 курс"},
		{10, "💻21-СПО-Р-01", "21-СПО-Р-01", "🎓 4 курс"},
		{10, "🚜21-СПО-Р-02", "21-СПО-Р-02", "🎓 4 курс"},
		{10, "📊21-СПО-Р-03", "21-СПО-Р-03", "🎓 4 курс"},
		{10, "📏21-СПО-ИСиП-01,02,03 22-СПО-ИСиП-08,09,10", "21-СПО-ИСиП-01,02,03 22-СПО-ИСиП-08,09,10", "🎓 4 курс"},
		{10, "🤝21-СПО-ИСиП-04,05,06", "21-СПО-ИСиП-04,05,06", "🎓 4 курс"},
		{10, "💰21-СПО-ОТЗИ-01,02 22-СПО-ОТЗИ-04", "21-СПО-ОТЗИ-01,02 22-СПО-ОТЗИ-04", "🎓 4 курс"},
		{10, "🥸21-СПО-СиСА-01,02", "21-СПО-СиСА-01,02", "🎓 4 курс"},
	}
	groupsMap = make(map[string]*Group, len(groups))
	for i := range groups {
		groupsMap[groups[i].TGName] = &groups[i]
	}
}

func GetGroups() []Group {
	groupsInit.Do(initGroups)
	return groups
}

func FindGroup(tgName string) *Group {
	groupsInit.Do(initGroups)
	return groupsMap[tgName]
}
func FindGroupName(surname string) bool {
	for _, group := range GetGroups() {
		if strings.EqualFold(group.TGName, surname) { // EqualFold учитывает регистр
			return true
		}
	}
	return false
}

func GenerateResponseFromTable(fieldPosStart, fieldPosEnd, groupName int, rows [][]string) []string {
	var result []string
	for i := fieldPosEnd; i <= fieldPosStart && i < len(rows); i++ {
		if len(rows[i]) <= groupName || rows[i][groupName] == "" {
			continue
		}
		entry := fmt.Sprintf("%s: %s", rows[i][1], rows[i][groupName])
		if trimmed := strings.TrimSpace(entry); trimmed != "" {
			result = append(result, trimmed)
		}
	}
	if len(result) == 0 {
		return []string{"Выходной"}
	}
	return result
}

func Tab(TGName, format, education string) string {
	group := FindGroup(TGName)
	if group == nil {
		return fmt.Sprintf("Группа %s не найдена", TGName)
	}

	fileName := getFileName(education, group.CourseNum)
	if fileName == "" {
		return "Неподдерживаемый тип образования или курс"
	}

	f, err := excelize.OpenFile(fileName)
	if err != nil {
		return fmt.Sprintf("Ошибка открытия файла: %v", err)
	}
	danger := f.Close()
	if danger != nil {
		return fmt.Sprintf("Ошибка закрытия файла: %v", danger)
	}

	_, _, week, _ := NowTime()
	rows, err := f.GetRows(week)
	if err != nil {
		return fmt.Sprintf("Ошибка чтения данных: %v", err)
	}

	groupName := findGroupColumn(rows[0], group.FileName)
	if groupName == -1 {
		return fmt.Sprintf("Группа %v не найдена в файле", group)
	}

	return generateSchedule(format, groupName, rows)
}

func getFileName(education, courseNum string) string {
	courseFiles := map[string]map[string]string{
		HigherEd: {
			"🤓 1 курс": "resources/1_course.xlsx",
			"😎 2 курс": "resources/2_course.xlsx",
			"🧐 3 курс": "resources/3_course.xlsx",
			"🎓 4 курс": "resources/4_course.xlsx",
			"🫠 5 курс": "resources/5_course.xlsx",
		},
		SecondaryEd: {
			"🤓 1 курс": "resources/СПО_1_course.xlsx",
			"😎 2 курс": "resources/СПО_2_course.xlsx",
			"🧐 3 курс": "resources/СПО_3_course.xlsx",
			"🎓 4 курс": "resources/СПО_4_course.xlsx",
		},
	}
	return courseFiles[education][courseNum]
}

func findGroupColumn(header []string, groupName string) int {
	for i, cell := range header {
		if cell == groupName {
			return i
		}
	}
	return -1
}

func generateSchedule(format string, groupName int, rows [][]string) string {
	dayRanges := map[time.Weekday][2]int{
		time.Monday:    {1, 14},
		time.Tuesday:   {15, 28},
		time.Wednesday: {29, 42},
		time.Thursday:  {43, 56},
		time.Friday:    {57, 70},
		time.Saturday:  {71, 84},
	}
	dayNames := map[time.Weekday]string{
		time.Monday:    "Понедельник",
		time.Tuesday:   "Вторник",
		time.Wednesday: "Среда",
		time.Thursday:  "Четверг",
		time.Friday:    "Пятница",
		time.Saturday:  "Суббота",
	}

	switch format {
	case WeekFormat:
		var result strings.Builder
		result.Grow(1024) // Предварительно выделяем память
		for day := time.Monday; day <= time.Saturday; day++ {
			ranges := dayRanges[day]
			result.WriteString("\n" + dayNames[day] + "\n")
			result.WriteString(strings.Join(GenerateResponseFromTable(ranges[1], ranges[0], groupName, rows), "\n"))
			result.WriteString("\n----------\n")
		}
		return result.String()

	case DayFormat:
		_, day, _, _ := NowTime()
		if day == time.Sunday {
			return "У тебя выходной ;)"
		}
		ranges := dayRanges[day]
		var result strings.Builder
		result.WriteString(dayNames[day] + "\n----------\n")
		result.WriteString(strings.Join(GenerateResponseFromTable(ranges[1], ranges[0], groupName, rows), "\n"))
		return result.String()

	default:
		return "Не нашел нужных данных :("
	}
}
